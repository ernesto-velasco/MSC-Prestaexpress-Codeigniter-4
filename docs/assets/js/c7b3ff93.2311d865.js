"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[275],{3905:function(e,a,o){o.d(a,{Zo:function(){return d},kt:function(){return c}});var t=o(7294);function r(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){r(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,t,r=function(e,a){if(null==e)return{};var o,t,r={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||(r[o]=e[o]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=t.createContext({}),i=function(e){var a=t.useContext(p),o=a;return e&&(o="function"==typeof e?e(a):l(l({},a),e)),o},d=function(e){var a=i(e.components);return t.createElement(p.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var o=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=i(o),c=r,f=m["".concat(p,".").concat(c)]||m[c]||u[c]||n;return o?t.createElement(f,l(l({ref:a},d),{},{components:o})):t.createElement(f,l({ref:a},d))}));function c(e,a){var o=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=o.length,l=new Array(n);l[0]=m;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<n;i++)l[i]=o[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},5905:function(e,a,o){o.r(a),o.d(a,{assets:function(){return d},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return u}});var t=o(7462),r=o(3366),n=(o(7294),o(3905)),l=["components"],s={sidebar_position:3},p="Crear empleado",i={unversionedId:"CRUD-Empleados/crear-empleado",id:"CRUD-Empleados/crear-empleado",title:"Crear empleado",description:"Vista (formulario)",source:"@site/docs/CRUD-Empleados/crear-empleado.md",sourceDirName:"CRUD-Empleados",slug:"/CRUD-Empleados/crear-empleado",permalink:"/MSC-Prestaexpress-Codeigniter-4/docs/CRUD-Empleados/crear-empleado",editUrl:"https://github.com/vegonz/MSC-Prestaexpress-Codeigniter-4/tree/master/docs/docs/CRUD-Empleados/crear-empleado.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Indice de empleados",permalink:"/MSC-Prestaexpress-Codeigniter-4/docs/CRUD-Empleados/indice-empleados"},next:{title:"Editar empleado",permalink:"/MSC-Prestaexpress-Codeigniter-4/docs/CRUD-Empleados/editar-empleado"}},d={},u=[{value:"Vista (formulario)",id:"vista-formulario",level:2},{value:"procesar datos del formulario",id:"procesar-datos-del-formulario",level:2}],m={toc:u};function c(e){var a=e.components,o=(0,r.Z)(e,l);return(0,n.kt)("wrapper",(0,t.Z)({},m,o,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"crear-empleado"},"Crear empleado"),(0,n.kt)("h2",{id:"vista-formulario"},"Vista (formulario)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Al crear un nuevo empleado necesitamos mostrar en el formulario los puestos disponibles para que el usuario pueda elegir uno y asignarlo al empleado, por eso crearemos el modelo de puestos en ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Models/PuestoModel.php"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Models/PuestoModel.php"',title:'"app/Models/PuestoModel.php"'},"<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass PuestoModel extends Model\n{\n    protected $table            = 'puesto'; // nombre tabla en la bd\n    protected $primaryKey       = 'id_puesto'; // nombre llave primaria de la tabla\n    protected $useAutoIncrement = true; // si la llave primaria es auto incrementable\n    protected $returnType       = 'object'; // (opcional, por defecto usa array) tipo de datos que retornara el modelo\n    protected $allowedFields    =\n    [\n        'pst_nombre',\n        'pst_sueldo',\n    ]; // (obligatorio) campos de tabla que ingresaremos mediante el formulario\n}\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Por la forma en que se construy\xf3 la bd, los puestos de los usuario se guardan en una tabla detalle, para registrar el puesto de los empleados nuevos creamos el archivo para el modelo de la tabla ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("em",{parentName:"strong"},"det_emp_puesto"))," en ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Models/DetEmpPuesto.php"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Models/DetEmpPuesto.php"',title:'"app/Models/DetEmpPuesto.php"'},"<?php\n\nnamespace App\\Models;\n\nuse CodeIgniter\\Model;\n\nclass DetEmpPuestoModel extends Model\n{\n    protected $table            = 'det_emp_puesto';\n    protected $primaryKey       = 'id_det_emp_puesto';\n    protected $useAutoIncrement = true;\n    protected $returnType       = 'object';\n    protected $useSoftDeletes   = true;\n    protected $allowedFields    =\n    [\n        'id_empleado',\n        'id_puesto',\n    ];\n    protected $useTimestamps = true;\n    protected $createdField  = 'fecha_inicio';\n    protected $updatedField  = false;\n    protected $deletedField  = 'fecha_fin';\n}\n")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Creamos la ruta donde vamos a mostrar el formulario para crear un empleado en ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Config/Routes.php"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Config/Routes.php"',title:'"app/Config/Routes.php"'},"$routes->get('/empleados/crear', 'EmpleadoController::crear');\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Creamos la funci\xf3n ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("em",{parentName:"strong"},"crear"))," dentro de ",(0,n.kt)("inlineCode",{parentName:"li"},"EmpleadoController.php")," (que creamos en la secci\xf3n de ",(0,n.kt)("a",{parentName:"li",href:"/docs/CRUD-Empleados/preparacion"},"preparaci\xf3n"),") ")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"En la parte superior importamos los modelos nuevos si no lo han hecho a\xfan")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Controllers/EmpleadoController.php"',title:'"app/Controllers/EmpleadoController.php"'},"use App\\Models\\PuestoModel;\nuse App\\Models\\DetEmpPuestoModel;\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Creamos la nueva funci\xf3n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Controllers/EmpleadoController.php"',title:'"app/Controllers/EmpleadoController.php"'},"// vista de formulario para crear un nuevo empleado\npublic function crear() {\n    $puestosModel = new PuestoModel(); // instancia de modelo puestos\n    $data['puestos'] = $puestosModel->findAll(); // obtenemos los puestos disponibles para mostrarlos en el formulario\n    return view('empleado/crear', $data); // retornamos la vista y junto con la variable data\n}\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"En la carpeta ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Views/empleado")," creamos el archivo para la vista que indicamos en la funci\xf3n anterior con el nombre ",(0,n.kt)("inlineCode",{parentName:"li"},"crear.php")," (usando la plantilla que creamos en la secci\xf3n de ",(0,n.kt)("a",{parentName:"li",href:"/docs/plantillas"},"plantillas y complementos"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Views/crear.php"',title:'"app/Views/crear.php"'},'<?= $this->extend(\'plantilla\') ?>\n<?= $this->section(\'contenido\') ?>\n<div class="mt-3">\n    <div class="row justify-content-between align-items-center">\n        <h3 class="col-auto">Nuevo Empleado</h3>\n        <div class="col-auto">\n            <button form="formularioEmpleado" class="btn btn-primary btn-sm" title="Registrar empleado">\n                Registrar\n            </button>\n        </div>\n    </div>\n    <form action="<?php echo base_url(\'empleados/registrar\'); ?>" method="post" class="row g-3" id="formularioEmpleado">\n        <div class="col-md-6">\n            <label for="emp_nombre" class="form-label">Nombre</label>\n            <input required type="text" size="5" class="form-control" name="emp_nombre" id="emp_nombre">\n        </div>\n        <div class="col-md-6">\n            <label for="usuario" class="form-label">Usuario</label>\n            <input required type="text" class="form-control" name=" usuario" id=" usuario">\n        </div>\n        <div class="col-md-6">\n            <label for="contrasena" class="form-label">Contrase\xf1a</label>\n            <input required type="password" class="form-control" name="contrasena" id="contrasena">\n        </div>\n        <div class="col-md-6">\n            <label for="contrasena" class="form-label">Puesto</label>\n            <select required class="form-select" aria-label="Selecci\xf3n de puesto de empleado" name="puesto" id="puesto">\n                <option disabled selected value="">Seleccionar</option>\n                <?php foreach ($puestos as $puesto) : ?>\n                    <option value="<?php echo $puesto->id_puesto; ?>"><?php echo $puesto->pst_nombre; ?></option>\n                <?php endforeach; ?>\n\n            </select>\n        </div>\n        <div class="col-md-12">\n            <label class="form-check-label" for="estado">Estado</label>\n            <div class="form-check form-switch">\n                <input class="form-check-input" type="checkbox" role="switch" name="estado" id="estado" checked>\n                <label class="form-check-label" for="estado">Activo/Inactivo</label>\n            </div>\n        </div>\n    </form>\n</div>\n</div>\n<?= $this->endSection() ?>\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"En el par\xe1metro action del formulario estamos usando la url que crearemos en el siguiente paso para procesar la informaci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"<?php echo base_url('empleados/registrar'); ?>"))),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Comprobamos que funcione en ",(0,n.kt)("a",{parentName:"li",href:"http://localhost/prestaexpress/public/empleados/crear"},"http://localhost/prestaexpress/public/empleados/crear"))),(0,n.kt)("h2",{id:"procesar-datos-del-formulario"},"procesar datos del formulario"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Creamos la url donde vamos a mandar la informaci\xf3n del formulario para registrarla en la base de datos en ",(0,n.kt)("inlineCode",{parentName:"li"},"app/Config/Routes.php"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Config/Routes.php"',title:'"app/Config/Routes.php"'},"$routes->post('empleados/registrar', 'EmpleadoController::registrar');\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Creamos la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"li"},"registrar")," del controlador ",(0,n.kt)("inlineCode",{parentName:"li"},"EmpleadoController.php"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="app/Controllers/EmpleadoController.php"',title:'"app/Controllers/EmpleadoController.php"'},"// registrar un nuevo empleado\npublic function registrar()\n{\n    // instancia de los modelos que usaremos\n    $empleadoModel = new EmpleadoModel(); // modelo empleado para registrar el nuevo empleado\n    $detEmpPuestoModel = new DetEmpPuestoModel(); // modelo DetEmpPuesto para registrar el puesto seleccionado por el usuario (que estamos recibiendo por post desde el formulario) del nuevo empleado en la tabla detalle\n    \n    // creamos un array de los datos recibidos desde el formulario\n    // con el formato 'nombreCampoBD' => $this->request->getPost('nombreDelCampoEnElFormulario')\n    $data = [\n        'emp_nombre' => $this->request->getPost('emp_nombre'),\n        'usuario' => $this->request->getPost('usuario'),\n        'estado'  => $this->request->getPost('estado'),\n        'contrasena' => $this->request->getPost('contrasena')\n    ];\n    \n    $empleado = $empleadoModel->insert($data); // insertamos el nuevo registro en la bd\n    \n    // una vez creado el nuevo empleado insertamos el puesto en la tabla detalle\n    $detEmpPuestoModel->insert([\n        'id_empleado' => $empleado,\n        'id_puesto' => $this->request->getPost('puesto')\n    ]);\n    \n    session()->setFlashdata('success', 'El usuario fue registrado.'); // creamos un mensaje temporal para que el usuario sepa que no ocurri\xf3 ning\xfan error\n\n    return redirect()->to(base_url('empleados')); // retornamos a la url principal de empleados\n}\n")))}c.isMDXComponent=!0}}]);